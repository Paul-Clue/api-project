{"id":"node_modules/apollo-server-core/dist/graphqlOptions.js","dependencies":[{"name":"/Users/paulc1/Desktop/Projects/Api Project/node_modules/apollo-server-core/dist/graphqlOptions.js.map","includedInParent":true,"mtime":1711168689956},{"name":"/Users/paulc1/Desktop/Projects/Api Project/node_modules/apollo-server-core/src/graphqlOptions.ts","includedInParent":true,"mtime":1711168690152},{"name":"/Users/paulc1/Desktop/Projects/Api Project/package.json","includedInParent":true,"mtime":1711177666650},{"name":"/Users/paulc1/Desktop/Projects/Api Project/.babelrc","includedInParent":true,"mtime":1711167415382},{"name":"/Users/paulc1/Desktop/Projects/Api Project/node_modules/apollo-server-core/package.json","includedInParent":true,"mtime":1711168689882}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveGraphqlOptions = void 0;\nfunction resolveGraphqlOptions(_x) {\n  return _resolveGraphqlOptions.apply(this, arguments);\n}\nfunction _resolveGraphqlOptions() {\n  _resolveGraphqlOptions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(options) {\n    var _len,\n      args,\n      _key,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(typeof options === 'function')) {\n            _context.next = 7;\n            break;\n          }\n          for (_len = _args.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = _args[_key];\n          }\n          _context.next = 4;\n          return options.apply(void 0, args);\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n        case 7:\n          return _context.abrupt(\"return\", options);\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _resolveGraphqlOptions.apply(this, arguments);\n}\nexports.resolveGraphqlOptions = resolveGraphqlOptions;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":22},"generated":{"line":11,"column":9}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":11,"column":30}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":11,"column":31}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":11,"column":33}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":12,"column":2}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":12,"column":9}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":12,"column":31}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":12,"column":32}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":12,"column":37}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":12,"column":44}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":12,"column":53}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":13,"column":0}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":14,"column":0}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":14,"column":9}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":14,"column":32}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":15,"column":2}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":15,"column":24}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":15,"column":27}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":15,"column":44}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":15,"column":59}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":15,"column":78}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":15,"column":81}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":43},"generated":{"line":15,"column":85}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":7},"generated":{"line":15,"column":86}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":7},"generated":{"line":15,"column":95}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":90,"column":2},"generated":{"line":15,"column":103}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":15,"column":110}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":16,"column":4}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":16,"column":8}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":16,"column":12}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":17,"column":6}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":17,"column":10}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":18,"column":6}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":18,"column":10}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":19,"column":6}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":19,"column":11}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":19,"column":14}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":19,"column":23}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":20,"column":4}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":20,"column":11}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":20,"column":30}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":20,"column":33}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":20,"column":37}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":20,"column":47}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":20,"column":56}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":20,"column":64}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":21,"column":6}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":21,"column":24}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":21,"column":32}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":21,"column":33}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":21,"column":37}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":21,"column":40}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":21,"column":48}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":21,"column":49}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":21,"column":53}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":22,"column":8}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":92,"column":69},"generated":{"line":23,"column":10}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":6},"generated":{"line":23,"column":16}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":13},"generated":{"line":23,"column":23}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":20},"generated":{"line":23,"column":30}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":25},"generated":{"line":23,"column":35}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":23,"column":45}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":24,"column":12}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":24,"column":20}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":24,"column":21}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":24,"column":25}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":25,"column":12}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":26,"column":10}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":27,"column":10}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":27,"column":15}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":27,"column":19}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":27,"column":22}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":27,"column":27}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":27,"column":28}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":95,"column":35},"generated":{"line":27,"column":34}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":5},"generated":{"line":27,"column":36}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":40}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":47}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":52}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":53}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":57}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":64}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":68}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":79}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":83}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":89}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":93}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":96}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":100}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":102}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":27,"column":106}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":5},"generated":{"line":28,"column":12}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":28,"column":16}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":28,"column":17}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":28,"column":21}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":28,"column":29}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":28,"column":34}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":28,"column":35}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":28,"column":39}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":29,"column":10}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":30,"column":10}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":30,"column":18}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":30,"column":19}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":30,"column":23}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":93,"column":21},"generated":{"line":31,"column":10}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":17},"generated":{"line":31,"column":17}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":24},"generated":{"line":31,"column":24}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":24},"generated":{"line":31,"column":25}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":24},"generated":{"line":31,"column":30}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":28},"generated":{"line":31,"column":39}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":32},"generated":{"line":31,"column":43}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":31,"column":44}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":32,"column":8}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":33,"column":10}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":33,"column":17}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":33,"column":25}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":33,"column":26}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":33,"column":32}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":33,"column":43}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":33,"column":51}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":33,"column":52}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":33,"column":56}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":34,"column":8}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":35,"column":10}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":35,"column":17}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":35,"column":25}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":35,"column":26}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":96,"column":33},"generated":{"line":35,"column":32}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":98,"column":11},"generated":{"line":35,"column":43}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":98,"column":18},"generated":{"line":35,"column":50}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":98,"column":18},"generated":{"line":36,"column":8}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":98,"column":18},"generated":{"line":37,"column":8}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":98,"column":18},"generated":{"line":38,"column":10}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":98,"column":18},"generated":{"line":38,"column":17}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":98,"column":18},"generated":{"line":38,"column":25}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":98,"column":18},"generated":{"line":38,"column":26}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":98,"column":18},"generated":{"line":38,"column":30}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":98,"column":18},"generated":{"line":39,"column":6}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":98,"column":18},"generated":{"line":40,"column":4}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":98,"column":18},"generated":{"line":40,"column":7}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":98,"column":18},"generated":{"line":40,"column":14}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":98,"column":18},"generated":{"line":41,"column":2}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":100,"column":1},"generated":{"line":41,"column":3}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":100,"column":1},"generated":{"line":42,"column":2}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":100,"column":1},"generated":{"line":42,"column":9}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":100,"column":1},"generated":{"line":42,"column":31}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":100,"column":1},"generated":{"line":42,"column":32}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":100,"column":1},"generated":{"line":42,"column":37}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":100,"column":1},"generated":{"line":42,"column":44}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":100,"column":1},"generated":{"line":42,"column":53}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":100,"column":1},"generated":{"line":43,"column":0}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":0},"generated":{"line":44,"column":0}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":0},"generated":{"line":44,"column":7}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":0},"generated":{"line":44,"column":8}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":0},"generated":{"line":44,"column":29}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":0},"generated":{"line":44,"column":32}},{"source":"../src/graphqlOptions.ts","name":null,"original":{"line":89,"column":0},"generated":{"line":44,"column":53}}],"sources":{"../src/graphqlOptions.ts":"import type {\n  GraphQLSchema,\n  ValidationContext,\n  GraphQLFieldResolver,\n  DocumentNode,\n  GraphQLError,\n  GraphQLFormattedError,\n  ParseOptions,\n} from 'graphql';\nimport type { KeyValueCache } from '@apollo/utils.keyvaluecache';\nimport type { DataSource } from 'apollo-datasource';\nimport type { ApolloServerPlugin } from 'apollo-server-plugin-base';\nimport type {\n  GraphQLExecutor,\n  ValueOrPromise,\n  GraphQLResponse,\n  GraphQLRequestContext,\n  SchemaHash,\n} from 'apollo-server-types';\nimport type { Logger } from '@apollo/utils.logger';\nimport type { DocumentStore } from './types';\n\n/*\n * GraphQLServerOptions\n *\n * - schema: an executable GraphQL schema used to fulfill requests.\n * - (optional) logger: a `Logger`-compatible implementation to be used for server-level messages.\n * - (optional) formatError: Formatting function applied to all errors before response is sent\n * - (optional) rootValue: rootValue passed to GraphQL execution, or a function to resolving the rootValue from the DocumentNode\n * - (optional) context: the context passed to GraphQL execution\n * - (optional) validationRules: extra validation rules applied to requests\n * - (optional) formatResponse: a function applied to each graphQL execution result\n * - (optional) fieldResolver: a custom default field resolver\n * - (optional) debug: a boolean that will print additional debug logging if execution errors occur\n * - (optional) parseOptions: options to pass when parsing schemas and queries\n * - (optional) allowBatchedHttpRequests: a boolean to toggle whether a single request can contain an array of queries. True by default\n *\n */\nexport interface GraphQLServerOptions<\n  TContext = Record<string, any>,\n  TRootValue = any,\n> {\n  schema: GraphQLSchema;\n  /**\n   * @deprecated: a not particularly stable or useful hash of the schema.\n   */\n  schemaHash: SchemaHash;\n  logger?: Logger;\n  formatError?: (error: GraphQLError) => GraphQLFormattedError;\n  rootValue?: ((parsedQuery: DocumentNode) => TRootValue) | TRootValue;\n  context?: TContext | (() => never);\n  validationRules?: Array<(context: ValidationContext) => any>;\n  executor?: GraphQLExecutor;\n  formatResponse?: (\n    response: GraphQLResponse,\n    requestContext: GraphQLRequestContext<TContext>,\n  ) => GraphQLResponse | null;\n  fieldResolver?: GraphQLFieldResolver<any, TContext>;\n  debug?: boolean;\n  dataSources?: () => DataSources<TContext>;\n  cache?: KeyValueCache;\n  persistedQueries?: PersistedQueryOptions;\n  plugins?: ApolloServerPlugin[];\n  documentStore?: DocumentStore | null;\n  dangerouslyDisableValidation?: boolean;\n  parseOptions?: ParseOptions;\n  nodeEnv?: string;\n  allowBatchedHttpRequests?: boolean;\n}\n\nexport type DataSources<TContext> = {\n  [name: string]: DataSource<TContext>;\n};\n\nexport interface PersistedQueryOptions {\n  cache?: KeyValueCache;\n  /**\n   * Specified in **seconds**, this time-to-live (TTL) value limits the lifespan\n   * of how long the persisted query should be cached.  To specify a desired\n   * lifespan of \"infinite\", set this to `null`, in which case the eviction will\n   * be determined by the cache's eviction policy, but the record will never\n   * simply expire.\n   */\n  ttl?: number | null;\n}\n\nexport default GraphQLServerOptions;\n\nexport async function resolveGraphqlOptions(\n  options:\n    | GraphQLServerOptions\n    | ((...args: Array<any>) => ValueOrPromise<GraphQLServerOptions>),\n  ...args: Array<any>\n): Promise<GraphQLServerOptions> {\n  if (typeof options === 'function') {\n    return await options(...args);\n  } else {\n    return options;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"a1643da4f94f6feb226de75040aa985b","cacheData":{"env":{}}}