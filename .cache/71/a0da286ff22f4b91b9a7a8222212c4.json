{"id":"../node_modules/@apollo/client/react/hooks/internal/wrapHook.js","dependencies":[{"name":"/Users/paulc1/Desktop/Projects/Api Project/node_modules/@apollo/client/react/hooks/internal/wrapHook.js.map","includedInParent":true,"mtime":1711168690704},{"name":"/Users/paulc1/Desktop/Projects/Api Project/package.json","includedInParent":true,"mtime":1711233850458},{"name":"/Users/paulc1/Desktop/Projects/Api Project/.babelrc","includedInParent":true,"mtime":1711167415382},{"name":"/Users/paulc1/Desktop/Projects/Api Project/node_modules/@apollo/client/react/hooks/package.json","includedInParent":true,"mtime":1711168690461}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapHook = wrapHook;\nvar wrapperSymbol = Symbol.for(\"apollo.hook.wrappers\");\n/**\n * @internal\n *\n * Makes an Apollo Client hook \"wrappable\".\n * That means that the Apollo Client instance can expose a \"wrapper\" that will be\n * used to wrap the original hook implementation with additional logic.\n * @example\n * ```tsx\n * // this is already done in `@apollo/client` for all wrappable hooks (see `WrappableHooks`)\n * // following this pattern\n * function useQuery() {\n *   return wrapHook('useQuery', _useQuery, options.client)(query, options);\n * }\n * function _useQuery(query, options) {\n *   // original implementation\n * }\n *\n * // this is what a library like `@apollo/client-react-streaming` would do\n * class ApolloClientWithStreaming extends ApolloClient {\n *   constructor(options) {\n *     super(options);\n *     this.queryManager[Symbol.for(\"apollo.hook.wrappers\")] = {\n *       useQuery: (original) => (query, options) => {\n *         console.log(\"useQuery was called with options\", options);\n *         return original(query, options);\n *       }\n *     }\n *   }\n * }\n *\n * // this will now log the options and then call the original `useQuery`\n * const client = new ApolloClientWithStreaming({ ... });\n * useQuery(query, { client });\n * ```\n */\nfunction wrapHook(hookName, useHook, clientOrObsQuery) {\n  var queryManager = clientOrObsQuery[\"queryManager\"];\n  var wrappers = queryManager && queryManager[wrapperSymbol];\n  var wrapper = wrappers && wrappers[hookName];\n  return wrapper ? wrapper(useHook) : useHook;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":7,"column":4}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":12,"column":19},"generated":{"line":7,"column":17}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":12,"column":22},"generated":{"line":7,"column":20}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":12,"column":28},"generated":{"line":7,"column":26}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":12,"column":29},"generated":{"line":7,"column":27}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":12,"column":32},"generated":{"line":7,"column":30}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":12,"column":33},"generated":{"line":7,"column":31}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":12,"column":55},"generated":{"line":7,"column":53}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":12,"column":56},"generated":{"line":7,"column":54}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":37,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":43,"column":0}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":72,"column":16},"generated":{"line":43,"column":9}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":72,"column":24},"generated":{"line":43,"column":17}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":43,"column":18}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":73,"column":32},"generated":{"line":43,"column":26}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":74,"column":2},"generated":{"line":43,"column":28}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":74,"column":15},"generated":{"line":43,"column":35}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":43,"column":37}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":75,"column":60},"generated":{"line":43,"column":53}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":75,"column":60},"generated":{"line":43,"column":55}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":77,"column":2},"generated":{"line":44,"column":2}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":77,"column":8},"generated":{"line":44,"column":6}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":77,"column":20},"generated":{"line":44,"column":18}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":78,"column":4},"generated":{"line":44,"column":21}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":83,"column":3},"generated":{"line":44,"column":37}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":83,"column":4},"generated":{"line":44,"column":38}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":83,"column":18},"generated":{"line":44,"column":52}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":83,"column":19},"generated":{"line":44,"column":53}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":84,"column":2},"generated":{"line":45,"column":2}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":84,"column":8},"generated":{"line":45,"column":6}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":84,"column":16},"generated":{"line":45,"column":14}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":84,"column":19},"generated":{"line":45,"column":17}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":84,"column":31},"generated":{"line":45,"column":29}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":84,"column":35},"generated":{"line":45,"column":33}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":84,"column":47},"generated":{"line":45,"column":45}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":84,"column":48},"generated":{"line":45,"column":46}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":84,"column":61},"generated":{"line":45,"column":59}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":84,"column":62},"generated":{"line":45,"column":60}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":46,"column":2}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":85,"column":8},"generated":{"line":46,"column":6}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":85,"column":15},"generated":{"line":46,"column":13}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":86,"column":4},"generated":{"line":46,"column":16}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":86,"column":12},"generated":{"line":46,"column":24}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":86,"column":17},"generated":{"line":46,"column":28}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":86,"column":25},"generated":{"line":46,"column":36}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":86,"column":26},"generated":{"line":46,"column":37}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":86,"column":34},"generated":{"line":46,"column":45}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":86,"column":43},"generated":{"line":46,"column":46}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":47,"column":2}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":87,"column":9},"generated":{"line":47,"column":9}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":87,"column":16},"generated":{"line":47,"column":16}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":87,"column":19},"generated":{"line":47,"column":19}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":87,"column":26},"generated":{"line":47,"column":26}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":87,"column":27},"generated":{"line":47,"column":27}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":87,"column":34},"generated":{"line":47,"column":34}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":87,"column":35},"generated":{"line":47,"column":35}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":87,"column":38},"generated":{"line":47,"column":38}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":87,"column":45},"generated":{"line":47,"column":45}},{"source":"../../../../src/react/hooks/internal/wrapHook.ts","name":null,"original":{"line":88,"column":0},"generated":{"line":48,"column":0}}],"sources":{"../../../../src/react/hooks/internal/wrapHook.ts":"import type {\n  useQuery,\n  useSuspenseQuery,\n  useBackgroundQuery,\n  useReadQuery,\n  useFragment,\n} from \"../index.js\";\nimport type { QueryManager } from \"../../../core/QueryManager.js\";\nimport type { ApolloClient } from \"../../../core/ApolloClient.js\";\nimport type { ObservableQuery } from \"../../../core/ObservableQuery.js\";\n\nconst wrapperSymbol = Symbol.for(\"apollo.hook.wrappers\");\n\ninterface WrappableHooks {\n  useQuery: typeof useQuery;\n  useSuspenseQuery: typeof useSuspenseQuery;\n  useBackgroundQuery: typeof useBackgroundQuery;\n  useReadQuery: typeof useReadQuery;\n  useFragment: typeof useFragment;\n}\n\n/**\n * @internal\n * Can be used to correctly type the [Symbol.for(\"apollo.hook.wrappers\")] property of\n * `QueryManager`, to override/wrap hook functionality.\n */\nexport type HookWrappers = {\n  [K in keyof WrappableHooks]?: (\n    originalHook: WrappableHooks[K]\n  ) => WrappableHooks[K];\n};\n\ninterface QueryManagerWithWrappers<T> extends QueryManager<T> {\n  [wrapperSymbol]?: HookWrappers;\n}\n\n/**\n * @internal\n *\n * Makes an Apollo Client hook \"wrappable\".\n * That means that the Apollo Client instance can expose a \"wrapper\" that will be\n * used to wrap the original hook implementation with additional logic.\n * @example\n * ```tsx\n * // this is already done in `@apollo/client` for all wrappable hooks (see `WrappableHooks`)\n * // following this pattern\n * function useQuery() {\n *   return wrapHook('useQuery', _useQuery, options.client)(query, options);\n * }\n * function _useQuery(query, options) {\n *   // original implementation\n * }\n *\n * // this is what a library like `@apollo/client-react-streaming` would do\n * class ApolloClientWithStreaming extends ApolloClient {\n *   constructor(options) {\n *     super(options);\n *     this.queryManager[Symbol.for(\"apollo.hook.wrappers\")] = {\n *       useQuery: (original) => (query, options) => {\n *         console.log(\"useQuery was called with options\", options);\n *         return original(query, options);\n *       }\n *     }\n *   }\n * }\n *\n * // this will now log the options and then call the original `useQuery`\n * const client = new ApolloClientWithStreaming({ ... });\n * useQuery(query, { client });\n * ```\n */\nexport function wrapHook<Hook extends (...args: any[]) => any>(\n  hookName: keyof WrappableHooks,\n  useHook: Hook,\n  clientOrObsQuery: ObservableQuery<any> | ApolloClient<any>\n): Hook {\n  const queryManager = (\n    clientOrObsQuery as unknown as {\n      // both `ApolloClient` and `ObservableQuery` have a `queryManager` property\n      // but they're both `private`, so we have to cast around for a bit here.\n      queryManager: QueryManagerWithWrappers<any>;\n    }\n  )[\"queryManager\"];\n  const wrappers = queryManager && queryManager[wrapperSymbol];\n  const wrapper: undefined | ((wrap: Hook) => Hook) =\n    wrappers && (wrappers[hookName] as any);\n  return wrapper ? wrapper(useHook) : useHook;\n}\n"},"lineCount":null}},"error":null,"hash":"75aa3d0ec618abb2bd473b359d1d46a2","cacheData":{"env":{}}}